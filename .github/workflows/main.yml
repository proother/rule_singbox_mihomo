name: Convert Workflow

on:
  workflow_dispatch:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      #
      # 1. Set variables
      #
      - name: Set variables
        shell: bash
        run: |
          echo "GOAMD64=v3" >> $GITHUB_ENV
          echo "BUILDTIME=$(TZ=Asia/Shanghai date +'%Y-%m-%d %H:%M')" >> $GITHUB_ENV

      #
      # 2. Check out repositories
      #
      - name: Checkout blackmatrix7/ios_rule_script
        uses: actions/checkout@v4
        with:
          repository: blackmatrix7/ios_rule_script
          path: ios_rule_script

      - name: Checkout MetaCubeX/meta-rules-converter
        uses: actions/checkout@v4
        with:
          repository: MetaCubeX/meta-rules-converter
          path: converter
          
      - name: Checkout Loyalsoldier/domain-list-custom
        uses: actions/checkout@v4
        with:
          repository: Loyalsoldier/domain-list-custom
          path: custom

      #
      # 3. Setup Go
      #
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'
          cache-dependency-path: ./custom/go.sum

      #
      # 4. Copy .yaml files
      #
      - name: Add data for sing-box (copy yaml)
        run: |
          echo "=== Gathering all .yaml files ==="
          mkdir -p community/sing-data

          for dir in $(find ios_rule_script/rule/Clash -type d); do
            if ls "$dir"/*_Classical.yaml 2>/dev/null; then
              find "$dir" -type f -name '*_Classical.yaml' ! -name '*_No_Resolve.yaml' -exec cp {} community/sing-data/ \;
            else
              dir_name=$(basename "$dir")
              find "$dir" -type f -name "${dir_name}.yaml" ! -name '*_No_Resolve.yaml' -exec cp {} community/sing-data/ \;
            fi
          done

          echo "=== Copied files in community/sing-data ==="
          ls -al community/sing-data

      #
      # 5. Convert YAML to sing rules
      #
      - name: Convert YAML to sing rules
        run: |
          echo "=== Converting .yaml to sing rules ==="
          mkdir -p sing-rule
          cd converter
          go run . clash -i ../community/sing-data -o ../sing-rule -t sing-box
          cd ../sing-rule

          for dir in */; do
              dir_name=$(basename "$dir")
              if [[ -f "$dir/classical.json" && -f "$dir/classical.srs" ]]; then
                  mv "$dir/classical.json" "${dir_name}.json"
                  mv "$dir/classical.srs" "${dir_name}.srs"
                  rm -rf "$dir"
              fi
          done

          for file in *.json *.srs; do
              if [[ "$file" == *_classical.* ]]; then
                  new_name=$(echo "$file" | sed 's/_classical//')
                  mv "$file" "$new_name"
              fi
          done

          echo "=== Final files in sing-rule ==="
          ls -al

      # 4. Add data (copy & transform .list files)
      #
      - name: Add data for meta (copy list)
        run: |
          echo "=== Gathering all .list files ==="
          mkdir -p meta-rule
          cp ios_rule_script/rule/Clash/*/*.list meta-rule/

      - name: Remove comments from list files in meta-rule
        run: |
          echo "=== Removing comments from list files ==="
          for file in meta-rule/*.list; do
            sed '/^#/d;/^$/d' "$file" > tmp && mv tmp "$file"
          done

      #
      # 7. Gather artifacts into publish folder
      #
      - name: Prepare publish artifacts
        run: |
          echo "=== Collecting final artifacts into ./publish/ ==="
          mkdir -p publish
          
          # Move sing-rule and meta-rule into publish/
          cp -r sing-rule publish/sing-rule
          cp -r meta-rule publish/meta-rule
          echo "=== sing-rule file count: $(find sing-rule -type f | wc -l) ==="
          echo "=== meta-rule file count: $(find meta-rule -type f | wc -l) ==="
          ls -R publish

      #
      # 8. Commit & push to 'release' branch
      #
      - name: Commit and push assets to 'release'
        run: |
          echo "=== Committing ./publish/ to branch 'release' ==="
          cd publish
          git init
          git config user.name "github-actions[bot]"
          git config user.email "idontknow+github-actions[bot]@users.noreply.github.com"
          git checkout -b release
          git add .
          git commit -m "Assets from ${{ env.BUILDTIME }}"
          git remote add origin "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
          git push -f -u origin release

      - name: Compare meta-rule and sing-rule files
        run: |
          # Extract basenames from meta-rule
          if [ -n "$(ls publish/meta-rule/*.list 2>/dev/null)" ]; then
            meta_basenames=$(ls publish/meta-rule/*.list | sed 's/\.list$//' | sort)
          else
            meta_basenames=""
          fi
      
          # Extract basenames from sing-rule
          if [ -n "$(ls publish/sing-rule/*.json 2>/dev/null)" ]; then
            sing_json_basenames=$(ls publish/sing-rule/*.json | sed 's/\.json$//' | sort)
          else
            sing_json_basenames=""
          fi
      
          if [ -n "$(ls publish/sing-rule/*.srs 2>/dev/null)" ]; then
            sing_srs_basenames=$(ls publish/sing-rule/*.srs | sed 's/\.srs$//' | sort)
          else
            sing_srs_basenames=""
          fi
      
          # Find missing files
          missing_json=$(comm -23 <(echo "$meta_basenames") <(echo "$sing_json_basenames"))
          missing_srs=$(comm -23 <(echo "$meta_basenames") <(echo "$sing_srs_basenames"))
      
          # Combine sing_json_basenames and sing_srs_basenames
          sing_all_basenames=$(echo "$sing_json_basenames $sing_srs_basenames" | tr ' ' '\n' | sort | uniq)
      
          # Find extra basenames in sing-rule
          extra_basenames=$(comm -13 <(echo "$meta_basenames") <(echo "$sing_all_basenames"))
      
          # Output results
          echo "Basenames in meta-rule but missing .json in sing-rule:"
          echo "$missing_json"
      
          echo "Basenames in meta-rule but missing .srs in sing-rule:"
          echo "$missing_srs"
      
          echo "Extra basenames in sing-rule not present in meta-rule:"
          echo "$extra_basenames"
      
          # Optional: Log file counts
          echo "meta-rule file count: $(ls publish/meta-rule/*.list | wc -l)"
          echo "sing-rule file count: $(ls publish/sing-rule/*.json publish/sing-rule/*.srs | wc -l)"
        shell: bash

      #
      # 9. Purge jsdelivr CDN (optional)
      #
      - name: Purge jsdelivr CDN
        run: |
          echo "=== Purging jsDelivr cache for files in ./publish/ ==="
          for file in $(find publish -type f); do
            filename=$(basename "$file")
            echo "Purging $filename..."
            curl -i "https://purge.jsdelivr.net/gh/${{ github.repository }}@release/${filename}"
          done

      - name: Done
        run: echo "All steps completed!"
