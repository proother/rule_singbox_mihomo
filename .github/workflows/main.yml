name: Convert Workflow

on:
  # Trigger manually or on push to main
  workflow_dispatch:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Set variables
        shell: bash
        run: |
          echo "GOAMD64=v3" >> $GITHUB_ENV
          echo "BUILDTIME=$(TZ=Asia/Shanghai date +'%Y-%m-%d %H:%M')" >> $GITHUB_ENV

      #
      # 1) Checkout repositories
      #
      - name: Checkout blackmatrix7/ios_rule_script
        uses: actions/checkout@v4
        with:
          repository: blackmatrix7/ios_rule_script
          path: ios_rule_script

      - name: Checkout MetaCubeX/meta-rules-converter
        uses: actions/checkout@v4
        with:
          repository: MetaCubeX/meta-rules-converter
          path: converter
          
      - name: Checkout Loyalsoldier/domain-list-custom
        uses: actions/checkout@v4
        with:
          repository: Loyalsoldier/domain-list-custom
          path: custom
          
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'
          cache-dependency-path: ./custom/go.sum

      #
      # 2) Add data for `meta` (using all .list files from blackmatrix7)
      #
      - name: Add data for meta
        run: |
          echo "=== Gathering all .list files for meta ==="
          mkdir -p community/data
          # Copy all .list files from ios_rule_script into community/data
          cp ios_rule_script/rule/Clash/*/*.list community/data/
          
          # Combine all .list files into one big file
          # cat ios_rule_script/rule/Clash/*/*.list > community/data/all_merged_clash_rules.list

          # Create empty "geolocation-!cn" and others, if needed:
          touch community/data/geolocation-!cn.list
          touch community/data/geolocation-cn.list
          touch community/data/tld-!cn.list
          touch community/data/tld-cn.list
          touch community/data/private.list
          
          ls ./community/data/*.*

          echo "List files copied. Ready to build geosite.dat."

      #
      # 3) Build geosite.dat file
      #
      - name: Build geosite.dat file
        run: |
          cd custom || exit 1
          # echo sentry.io >>  ../community/data/openai
          echo ipleak.net >> ../community/data/geolocation-\!cn && echo browserleaks.org >> ../community/data/geolocation-\!cn
          go run ./ --datapath=../community/data
          cp ./publish/geosite.dat ../community/data/geosite.dat
          ls ../community/data/geosite.*

      #
      # 4) Build db and metadb file (no geoip)
      #
      - name: Build db and metadb file
        env:
          NO_SKIP: true
        run: |
          echo "=== Building geosite.db (no geoip) ==="
          go install -trimpath -ldflags="-s -w -buildid=" github.com/metacubex/geo/cmd/geo@master
          # Convert the newly built geosite.dat into geosite.db
          geo convert site -i v2ray -o sing -f geosite.db ./community/data/geosite.dat
          echo "DB build complete (without geoip)."

      #
      # 5) Convert geo to sing-rule-set
      #
      - name: Convert geo to sing-rule-set
        env:
          NO_SKIP: true
        run: |
          echo "=== Converting geo to sing-rule-set ==="
          mkdir -p sing-rule/geo/geosite && mkdir -p sing-rule/geo/geoip
          cd converter
          go run . geosite -f ../community/data/geosite.dat -o ../sing-rule/geo/geosite -t sing-box

      #
      # 6) Convert geo to meta-rule-set
      #
      - name: Convert geo to meta-rule-set
        env:
          NO_SKIP: true
        run: |
          echo "=== Converting geo to meta-rule-set ==="
          mkdir -p meta-rule/geo/geosite && mkdir -p meta-rule/geo/geoip
          cd converter
          go run . geosite -f ../community/data/geosite.dat -o ../meta-rule/geo/geosite

      #
      # (Optional) Upload or publish artifacts, etc.
      #
      - name: Done
        run: echo "All steps completed!"
